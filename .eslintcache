[{"D:\\Projects\\arc-manager.react-material\\src\\index.js":"1","D:\\Projects\\arc-manager.react-material\\src\\components\\App.js":"2","D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\Theme.js":"3","D:\\Projects\\arc-manager.react-material\\src\\components\\app.styles.jsx":"4","D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\footer\\footer.component.jsx":"5","D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\header\\Header.component.jsx":"6","D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\switch-form\\switch-form.component.jsx":"7","D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\content-tabel\\content-tabel.component.jsx":"8","D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\add-modal\\add-modal.component.jsx":"9","D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\content-tabel\\content-table.utils.js":"10","D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\footer\\footer.styles.jsx":"11","D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\header\\header.styles.jsx":"12","D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\add-modal\\add-modal.styles.jsx":"13","D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\content-tabel\\content-table.styles.jsx":"14","D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\content-tabel\\content-table.data.js":"15","D:\\Projects\\arc-manager.react-material\\src\\components\\Fonts.js":"16"},{"size":395,"mtime":1612375000695,"results":"17","hashOfConfig":"18"},{"size":5662,"mtime":1612459405146,"results":"19","hashOfConfig":"18"},{"size":4045,"mtime":1612375000688,"results":"20","hashOfConfig":"18"},{"size":1159,"mtime":1612375000686,"results":"21","hashOfConfig":"18"},{"size":461,"mtime":1612375000692,"results":"22","hashOfConfig":"18"},{"size":1140,"mtime":1612375000693,"results":"23","hashOfConfig":"18"},{"size":273,"mtime":1612375000695,"results":"24","hashOfConfig":"18"},{"size":11076,"mtime":1612375546389,"results":"25","hashOfConfig":"18"},{"size":12097,"mtime":1612375000689,"results":"26","hashOfConfig":"18"},{"size":998,"mtime":1612375000691,"results":"27","hashOfConfig":"18"},{"size":501,"mtime":1612375000692,"results":"28","hashOfConfig":"18"},{"size":565,"mtime":1612375000694,"results":"29","hashOfConfig":"18"},{"size":1945,"mtime":1612375000690,"results":"30","hashOfConfig":"18"},{"size":1515,"mtime":1612375000691,"results":"31","hashOfConfig":"18"},{"size":366,"mtime":1612375562715,"results":"32","hashOfConfig":"18"},{"size":784,"mtime":1612459393008,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1p01j3n",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\arc-manager.react-material\\src\\index.js",[],["68","69"],"D:\\Projects\\arc-manager.react-material\\src\\components\\App.js",[],"D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\Theme.js",[],"D:\\Projects\\arc-manager.react-material\\src\\components\\app.styles.jsx",[],"D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\footer\\footer.component.jsx",[],"D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\header\\Header.component.jsx",[],"D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\switch-form\\switch-form.component.jsx",[],"D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\content-tabel\\content-tabel.component.jsx",["70","71"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { useToolbarStyles, useStyles } from \"./content-table.styles\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\n\r\nimport {\r\n  MenuItem,\r\n  Menu,\r\n  TextField,\r\n  InputAdornment,\r\n  Chip,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Toolbar,\r\n  Typography,\r\n  Paper,\r\n  Checkbox,\r\n  IconButton,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  getComparator,\r\n  getFilterdRows,\r\n  descendingComparator,\r\n  stableSort,\r\n} from \"./content-table.utils\";\r\n\r\nimport headCells from \"./content-table.data\"\r\n\r\nconst EnhancedTableHead = (props) => {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align=\"center\"\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              hideSortIcon\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n};\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const {\r\n    numSelected,\r\n    totalFilterIcon,\r\n    setTotalFilterIcon,\r\n    filterValue,\r\n    setFilterValue,\r\n  } = props;\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleMenu = (e) =>\r\n    setAnchorEl(!Boolean(anchorEl) ? e.currentTarget : null);\r\n\r\n  const handleTotalFilterIcon = () =>\r\n    setTotalFilterIcon(\r\n      totalFilterIcon === \">\" ? \"<\" : totalFilterIcon === \"<\" ? \"===\" : \">\"\r\n    );\r\n\r\n  const handlePriceFilter = ({ target: { value } }) => {\r\n    setFilterValue(value);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title}>{null}</Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\" onClick={props.onDelete}>\r\n            <DeleteIcon style={{ fontSize: 30 }} color=\"primary\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\" onClick={handleMenu}>\r\n            <FilterListIcon color=\"secondary\" style={{ fontSize: 50 }} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleMenu}\r\n        elevation={0}\r\n        keepMounted\r\n      >\r\n        <MenuItem disableTouchRipple classes={{ root: classes.menu }}>\r\n          <TextField\r\n            placeholder=\"Enter a price to filter\"\r\n            value={filterValue}\r\n            onChange={handlePriceFilter}\r\n            InputProps={{\r\n              type: \"number\",\r\n              endAdornment: (\r\n                <InputAdornment\r\n                  position=\"end\"\r\n                  onClick={handleTotalFilterIcon}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <IconButton className={classes.totalFilter}>\r\n                    <span>{totalFilterIcon[0]}</span>\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <span className={classes.dolarSign}>$</span>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </MenuItem>\r\n      </Menu>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst EnhancedTable = ({ rows, searchValue, handleDelete }) => {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"name\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [evalSign, setEvalSign] = React.useState(\">\");\r\n  const [totalFilterValue, setTotalFilterValue] = React.useState(\"\");\r\n\r\n  const filterdRows = getFilterdRows(searchValue, rows);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = filterdRows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const onDelete = () => {\r\n    handleDelete(selected);\r\n    setSelected([]);\r\n  };\r\n\r\n  const isFilterd = (total) =>\r\n    totalFilterValue.length === 0 ||\r\n    eval(`${total} ${evalSign} ${totalFilterValue}`);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper elevation={0} className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          onDelete={onDelete}\r\n          numSelected={selected.length}\r\n          totalFilterIcon={evalSign}\r\n          setTotalFilterIcon={setEvalSign}\r\n          filterValue={totalFilterValue}\r\n          setFilterValue={setTotalFilterValue}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"medium\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={filterdRows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(filterdRows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return isFilterd(row.total) ? (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{row.date}</TableCell>\r\n                      <TableCell align=\"center\">{row.service}</TableCell>\r\n                      <TableCell style={{ width: \"5em\" }} align=\"center\">\r\n                        {row.features}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{row.complexity}</TableCell>\r\n                      <TableCell align=\"center\">{row.platforms}</TableCell>\r\n                      <TableCell align=\"center\">{row.users}</TableCell>\r\n                      <TableCell align=\"center\">{row.total}</TableCell>\r\n                    </TableRow>\r\n                  ) : null;\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={filterdRows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n        <Grid container justify=\"flex-end\">\r\n          <Grid item>\r\n            {totalFilterValue && (\r\n              <Chip\r\n                onDelete={() => setTotalFilterValue(\"\")}\r\n                label={\r\n                  (evalSign === \">\"\r\n                    ? \"Greater than\"\r\n                    : evalSign === \"<\"\r\n                    ? \"Less than\"\r\n                    : \"Equal to\") + ` $${totalFilterValue}`\r\n                }\r\n                className={classes.chip}\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnhancedTable;\r\n","D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\add-modal\\add-modal.component.jsx",[],"D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\content-tabel\\content-table.utils.js",[],"D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\footer\\footer.styles.jsx",[],"D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\header\\header.styles.jsx",[],"D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\add-modal\\add-modal.styles.jsx",[],"D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\content-tabel\\content-table.styles.jsx",[],"D:\\Projects\\arc-manager.react-material\\src\\components\\ui\\content-tabel\\content-table.data.js",[],"D:\\Projects\\arc-manager.react-material\\src\\components\\Fonts.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":35,"column":3,"nodeType":"78","messageId":"79","endLine":35,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":252,"column":5,"nodeType":"82","messageId":"83","endLine":252,"endColumn":9},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'descendingComparator' is defined but never used.","Identifier","unusedVar","no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]