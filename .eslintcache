[{"F:\\Web\\React\\project-manager\\src\\index.js":"1","F:\\Web\\React\\project-manager\\src\\components\\App.js":"2","F:\\Web\\React\\project-manager\\src\\components\\ui\\footer\\footer.component.jsx":"3","F:\\Web\\React\\project-manager\\src\\components\\ui\\header\\Header.component.jsx":"4","F:\\Web\\React\\project-manager\\src\\components\\ui\\footer\\footer.styles.jsx":"5","F:\\Web\\React\\project-manager\\src\\components\\ui\\header\\header.styles.jsx":"6","F:\\Web\\React\\project-manager\\src\\components\\ui\\Theme.js":"7","F:\\Web\\React\\project-manager\\src\\components\\app.styles.jsx":"8","F:\\Web\\React\\project-manager\\src\\components\\ui\\switch-form\\switch-form.component.jsx":"9","F:\\Web\\React\\project-manager\\src\\components\\ui\\content-tabel\\content-tabel.component.jsx":"10","F:\\Web\\React\\project-manager\\src\\components\\ui\\content-tabel\\content-tabel.styles.jsx":"11"},{"size":230,"mtime":1610053031395,"results":"12","hashOfConfig":"13"},{"size":3238,"mtime":1610391431208,"results":"14","hashOfConfig":"13"},{"size":461,"mtime":1610053143149,"results":"15","hashOfConfig":"13"},{"size":1187,"mtime":1610053195679,"results":"16","hashOfConfig":"13"},{"size":520,"mtime":1610053090134,"results":"17","hashOfConfig":"13"},{"size":565,"mtime":1609252514398,"results":"18","hashOfConfig":"13"},{"size":3601,"mtime":1610391334335,"results":"19","hashOfConfig":"13"},{"size":304,"mtime":1610313720519,"results":"20","hashOfConfig":"13"},{"size":273,"mtime":1610313635048,"results":"21","hashOfConfig":"13"},{"size":1406,"mtime":1610391318006,"results":"22","hashOfConfig":"13"},{"size":255,"mtime":1610391218872,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"qjzacn",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"F:\\Web\\React\\project-manager\\src\\index.js",[],["50","51"],"F:\\Web\\React\\project-manager\\src\\components\\App.js",["52"],"import { useState } from \"react\";\r\nimport useStyles from \"./app.styles\";\r\n\r\nimport { \r\n  ThemeProvider,\r\n  Typography,\r\n  InputAdornment,\r\n  Grid,\r\n  TextField,\r\n  FormGroup,\r\n} from '@material-ui/core';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport Footer from './ui/footer/footer.component';\r\nimport Header from './ui/header/Header.component';\r\nimport Switch from \"./ui/switch-form/switch-form.component\";\r\nimport ContentTable from \"./ui/content-tabel/content-tabel.component\";\r\n\r\nimport theme from './ui/Theme';\r\n\r\nconst createRow = (name, data, service, features, complexity, platforms, total) => ([name, data, service, features, complexity, platforms, total]);\r\n\r\nconst App = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const [websiteSwitch, setWebsiteSwitch] = useState(false);\r\n  const [iosSwitch, setIosSwitch] = useState(false);\r\n  const [androidSwitch, setAndroidSwitch] = useState(false);\r\n  const [softwareSwitch, setSoftwareSwitch] = useState(false);\r\n\r\n  const [rows, setRows] = useState([createRow(\"Mohamed Hussein\", \"4/3/2002\", \"Website\", \"N/A\", \"N/A\", \"N/A\", \"$1500\"), createRow(\"Mohamed Hussein\", \"4/3/2002\", \"Website\", \"N/A\", \"N/A\", \"N/A\", \"$1500\"), createRow(\"Custom Person\", \"4/3/2002\", \"Android\", \"E-commerce / Photo / Videos / Transfer Files / Push Notifications\", \"N/A\", \"N/A\", \"$1500\"), createRow(\"Mohamed Hussein\", \"4/3/2002\", \"Website\", \"N/A\", \"N/A\", \"N/A\", \"$1500\")]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleInput = (e) => setInputValue(e.target.value);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Header />\r\n      <Grid container direction=\"column\">\r\n        <Grid item className={classes.header}>\r\n          <Typography variant=\"h2\">\r\n            Projects\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            value={inputValue}\r\n            onChange={handleInput}\r\n            placeholder=\"Search project details or create a new entry.\"\r\n            className={classes.input}\r\n            InputProps={{ \r\n              endAdornment: <InputAdornment position=\"end\">\r\n                <AddIcon color=\"primary\" style={{ fontSize: 30 }} />\r\n              </InputAdornment>\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item className={classes.switchsContainer}>\r\n          <FormGroup row>\r\n            <Switch\r\n              label=\"Websites\"\r\n              checked={websiteSwitch} \r\n              onChange={() => setWebsiteSwitch(!websiteSwitch)}\r\n            />\r\n            <Switch\r\n              label=\"IOS Apps\"\r\n              checked={iosSwitch} \r\n              onChange={() => setIosSwitch(!iosSwitch)}\r\n            />\r\n            <Switch\r\n              label=\"Android Apps\"\r\n              checked={androidSwitch} \r\n              onChange={() => setAndroidSwitch(!androidSwitch)}\r\n            />\r\n            <Switch\r\n              label=\"Custom Software\"\r\n              checked={softwareSwitch} \r\n              onChange={() => setSoftwareSwitch(!softwareSwitch)}\r\n            />\r\n          </FormGroup>\r\n        </Grid>\r\n        <Grid item>\r\n          <ContentTable rows={rows} />\r\n        </Grid>\r\n      </Grid>\r\n      <Footer />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\Web\\React\\project-manager\\src\\components\\ui\\footer\\footer.component.jsx",[],"F:\\Web\\React\\project-manager\\src\\components\\ui\\header\\Header.component.jsx",[],"F:\\Web\\React\\project-manager\\src\\components\\ui\\footer\\footer.styles.jsx",[],"F:\\Web\\React\\project-manager\\src\\components\\ui\\header\\header.styles.jsx",[],["53","54"],"F:\\Web\\React\\project-manager\\src\\components\\ui\\Theme.js",[],"F:\\Web\\React\\project-manager\\src\\components\\app.styles.jsx",[],"F:\\Web\\React\\project-manager\\src\\components\\ui\\switch-form\\switch-form.component.jsx",[],"F:\\Web\\React\\project-manager\\src\\components\\ui\\content-tabel\\content-tabel.component.jsx",["55"],"import {\r\n  Table,\r\n  TableRow,\r\n  TableBody,\r\n  TableHead,\r\n  TableContainer,\r\n  TableCell,\r\n  Paper,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\n\r\nimport useStyles from \"./content-tabel.styles\";\r\n\r\nconst ContentTable = ({ rows }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Grid container justify=\"flex-end\">\r\n        <Grid item>\r\n          <FilterListIcon color=\"secondary\" className={classes.filterIcon} />\r\n        </Grid>\r\n      </Grid>\r\n      <TableContainer className={classes.tableContainer}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Service</TableCell>\r\n              <TableCell>Features</TableCell>\r\n              <TableCell>Complexity</TableCell>\r\n              <TableCell>Platforms</TableCell>\r\n              <TableCell>Total</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, i) => (\r\n              <TableRow key={row[0] + i}>\r\n                {row.map((cell, i) => (\r\n                  <TableCell key={cell + i}>{cell}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContentTable;\r\n","F:\\Web\\React\\project-manager\\src\\components\\ui\\content-tabel\\content-tabel.styles.jsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":31,"column":16,"nodeType":"62","messageId":"63","endLine":31,"endColumn":23},{"ruleId":"56","replacedBy":"64"},{"ruleId":"58","replacedBy":"65"},{"ruleId":"60","severity":1,"message":"66","line":8,"column":3,"nodeType":"62","messageId":"63","endLine":8,"endColumn":8},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'setRows' is assigned a value but never used.","Identifier","unusedVar",["67"],["68"],"'Paper' is defined but never used.","no-global-assign","no-unsafe-negation"]